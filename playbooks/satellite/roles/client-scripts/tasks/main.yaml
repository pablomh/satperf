---
  - name: "Discover operating system we are going to use"
    shell:
        hammer --username "{{ sat_user }}" --password "{{ sat_pass }}" os info --id 1 | grep '^Title' | sed 's/^.*:\s\+\(.*\)$/\1/'
    delegate_to: "{{ groups['satellite6']|first }}"
    run_once: true
    register: content_operatingsystem_command
    when: "content_operatingsystem is not defined or content_operatingsystem|length == 0"
  - name: "Set operating system we are going to hardcode into clients.yaml"
    set_fact:
        content_operatingsystem: "{{ content_operatingsystem_command.stdout }}"
    run_once: true
    when: "content_operatingsystem is not defined"

  - name: "Make sure operating system exists in Satellite"
    command:
      hammer --csv -u "{{ sat_user }}" -p "{{ sat_pass }}" os list
    delegate_to: "{{ groups['satellite6']|first }}"
    run_once: true
    register: hammer_os_list_command
  - name: "Create operating system on Satellite"
    command:
      hammer -u "{{ sat_user }}" -p "{{ sat_pass }}" os create --architectures x86_64 --family Redhat --name "{{ content_operatingsystem.split(' ')[0] }}" --major "{{ content_operatingsystem.split(' ')[1].split('.')[0] }}" --minor "{{ content_operatingsystem.split(' ')[1].split('.')[1] }}"
    when: "',' + content_operatingsystem + ',' not in hammer_os_list_command.stdout"
    delegate_to: "{{ groups['satellite6']|first }}"
    run_once: true

  - name: "Distribute clients.yaml"
    template:
      src: "files/clients.yaml.j2"
      dest: "/root/clients.yaml"
      force: yes
  - name: "Please check these are hosts you need in /etc/hosts"
    debug:
      var:
        "groups['satellite6'] + groups['capsules']"
    run_once: yes
  - name: "Distribute private key"
    copy:
      src: "../../{{ client_private_key }}"
      dest: /root/id_rsa_key
      mode: "u=rw,g=,o="
      force: yes
...
